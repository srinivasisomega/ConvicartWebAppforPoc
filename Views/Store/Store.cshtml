@model List<ConvicartWebApp.Models.Store>
<script>
    let cartCount = 0; // Initialize cart count

    function addToCart(productName) {
        cartCount++; // Increment cart count
        document.getElementById('cart-count').innerText = cartCount; // Update cart count display
        alert(productName + ' has been added to your cart!'); // Optional alert for feedback
    }
</script>
<style>
    main {
        display: flex;
        flex-direction: row;
    }
    /* Sidebar styles */
    .sidebar {
        width: 250px;
        background-color: #fff;
        padding: 15px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        border-radius: 8px;
    }

        .sidebar h2 {
            font-size: 18px;
            margin-bottom: 10px;
        }

        .sidebar ul {
            list-style: none;
            padding-left: 0;
            margin-bottom: 20px;
        }

            .sidebar ul li {
                padding: 5px 0;
                color: #555;
            }

    /* Store items section */
    .store-items {
        flex-grow: 1;
        margin-left: 20px;
        width: stretch;
    }

    .filter-bar form {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }


    .search-bar {
        width: 60%;
        padding: 10px;
        font-size: 16px;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    .filter-bar select {
        padding: 10px;
        font-size: 16px;
        border: 1px solid #ccc;
        border-radius: 5px;
        background-color: white;
    }

    .item-grid {
        display: grid;
        grid-template-columns: repeat(3, 1fr); /* 3 items per row */
        gap: 20px;
    }

    /* Item card styles */
    /* Item card styles */
    .item-card {
        width: 261px;
        background-color: #fff;
        border-radius: 8px;
        padding: 20px; /* Increased padding */
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2); /* Stronger shadow for a more pronounced effect */
        text-align: center;
        transition: transform 0.3s, box-shadow 0.3s, background-color 0.3s; /* Added transitions */
        position: relative; /* Necessary for the float effect */
    }

    /* Initially hide the button */
    .add-to-cart {
        display: none; /* Hide the button by default */
        background-color: darkgoldenrod; /* Green background */
        color: white; /* White text */
        border: none; /* No border */
        border-radius: 5px; /* Rounded corners */
        padding: 5px 5px; /* Padding */
        cursor: pointer; /* Pointer cursor on hover */
        position: absolute; /* Position the button absolutely within the card */
        bottom: 10px; /* Distance from the bottom */
        left: 50%; /* Center it horizontally */
        transform: translateX(-50%); /* Center align */
        font-size: 12px; /* Font size */
    }

    .item-card:hover {
        transform: scale(1.05); /* Slightly enlarge the card */
        box-shadow: 0 8px 30px rgba(0, 0, 0, 0.3); /* Stronger shadow for depth */
        background-color: #f9f9f9; /* Change background color on hover */
    }
    /* Show the button on hover */
    .item-card:hover .add-to-cart {
        display: block; /* Show the button */
    }

    .cart-count {
        margin-left: 5px; /* Space between the text and count */
        background-color: #fff; /* White background */
        border-radius: 12px; /* Rounded corners */
        padding: 3px 6px; /* Padding */
        font-size: 14px; /* Font size */
        color: #333; /* Dark text */
        display: inline-block; /* Inline block to adjust to content */
    }

    /* Card image */
    .item-card img {
        width: 100px; /* Increased width */
        height: 100px; /* Increased height */
        border-radius: 8px;
        margin-bottom: 10px;
    }

    /* Card title */
    .item-card h3 {
        font-size: 20px; /* Increased font size for the title */
        margin-bottom: 5px;
        color: #333;
    }

    /* Card price */
    .item-card p {
        font-size: 16px;
        color: #888;
    }

    /* Rating display */
    .rating {
        margin-top: 10px;
        font-size: 14px;
        color: #ffcc00; /* Gold color for the rating */
    }

    /* Example star icon */
    .star {
        font-size: 16px; /* Adjust size as needed */
        color: #ffcc00; /* Gold color for stars */
    }


    /* Pagination styles */
    .pagination {
        text-align: center;
        margin-top: 20px;
    }

    .page-link {
        display: inline-block;
        padding: 10px 15px;
        margin: 0 5px;
        border: 1px solid #ddd;
        background-color: #f7f7f7;
        color: #333;
        text-decoration: none;
        border-radius: 5px;
    }

        .page-link:hover {
            background-color: #eaeaea;
        }

        .page-link.active {
            background-color: #333;
            color: #fff;
            pointer-events: none;
        }

    /* Sidebar and Item styles as before */
</style>

<div style="margin-left:60px; padding:30px">
    <div class="store-items">
        <div class="filter-bar">
            <form method="get" action="@Url.Action("Store")">
                <!-- Ensure this points to the Store action -->
                <input type="text" name="searchTerm" placeholder="Search" class="search-bar" value="@Context.Request.Query["searchTerm"]">
                <select name="sortOrder">

                    <option value="New" selected="@(ViewBag.SortOrder == "New")">New</option>
                    <option value="Price ascending" selected="@(ViewBag.SortOrder == "Price ascending")">Price ascending</option>
                    <option value="Price descending" selected="@(ViewBag.SortOrder == "Price descending")">Price descending</option>
                    <option value="Rating" selected="@(ViewBag.SortOrder == "Rating")">Rating</option>
                </select>
                <button type="submit">Filter</button>
            </form>
        </div>
        <div class="item-grid">
            @foreach (var item in Model)
            {
                <div class="item-card">
                    <img src="~/Images/store/@item.imgUrl" alt="@item.ProductName" class="item-image">
                    <h3>@item.ProductName</h3>
                    <p>@item.Price points</p>
                    <div class="rating">
                        @for (int i = 0; i < item.Rating; i++)
                        {
                            <span class="star">★</span> <!-- Use your star icon or HTML entity here -->
                        }
                        @for (int? i = item.Rating; i < 5; i++)
                        {
                            <span class="star">☆</span> <!-- Empty star -->
                        }
                    </div>
                    <form asp-controller="Store" asp-action="AddToCart" method="get">
                        <button class="add-to-cart" onclick="addToCart('@item.ProductName')">
                            Add to Cart
                            <span class="cart-count" id="cart-count">0</span>
                        </button>
                    </form>
                </div>
            }
        </div>




        <!-- Pagination controls -->
        <div class="pagination">
            @if (ViewBag.CurrentPage > 1)
            {
                <a href="@Url.Action("Store", new { page = ViewBag.CurrentPage - 1 })" class="page-link">Previous</a>
            }

            @for (int i = 1; i <= ViewBag.TotalPages; i++)
            {
                <a href="@Url.Action("Store", new { page = i })" class="page-link @(i == ViewBag.CurrentPage ? "active" : "")">@i</a>
            }

            @if (ViewBag.CurrentPage < ViewBag.TotalPages)
            {
                <a href="@Url.Action("Store", new { page = ViewBag.CurrentPage + 1 })" class="page-link">Next</a>
            }
        </div>
    </div>
</div>
<script>
    let cartCount = 0; // Initialize cart count

    function addToCart(productName) {
        cartCount++; // Increment cart count
        document.getElementById('cart-count').innerText = cartCount; // Update cart count display
        alert(productName + ' has been added to your cart!'); // Optional alert for feedback
    }
</script>

